name: CI/CD Delta Deploy with sfdx-git-delta

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install --global @salesforce/cli

      - name: Authenticate to Salesforce (JWT)
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sf org login jwt --clientid 3MVG9dZJodJWITSuB5CFu69a8IIeQ6aPCc6M34dCGvS1GNQavfKPaVxjybKxS4xU0xSO_OhTerBCRhbLedxCE \
                           --jwtkeyfile server.key \
                           --username bruno.romano182@gmail.com.treinamento \
                           --instanceurl https://brunoromano23-dev-ed.my.salesforce.com

      - name: Generate Delta Folder
        run: |
              mkdir -p delta
              git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^force-app/' | while read file; do
                mkdir -p "delta/$(dirname "$file")"
                cp "$file" "delta/$file"
              done

      - name: Convert Delta Source to Metadata API Format
        run: |
            if [ -d "delta/force-app" ] && [ "$(ls -A delta/force-app)" ]; then
              sf project convert source --root-dir delta/force-app --output-dir converted-delta
            else
              echo "No files to convert. Skipping conversion."
              mkdir -p converted-delta  # Create empty folder to avoid deployment crash
            fi

      - name: Check if Delta Package Exists
        id: delta-check
        run: |
          if [ ! -d "converted-delta" ] || [ -z "$(ls -A converted-delta)" ]; then
            echo "no-deploy=true" >> $GITHUB_ENV
          else
            echo "no-deploy=false" >> $GITHUB_ENV
          fi

      - name: Deploy Delta Metadata
        if: env.no-deploy == 'false'
        run: |
            sf deploy metadata --target-org bruno.romano182@gmail.com.treinamento --metadata-dir converted-delta --wait 10

